-- =====================================================
-- НАСТРОЙКА БАЗЫ ДАННЫХ ДЛЯ BANK CARDS REST API
-- =====================================================

-- 1. Создание таблиц согласно ТЗ

-- Таблица пользователей
CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL
);

-- Таблица ролей пользователей
CREATE TABLE IF NOT EXISTS user_roles (
    user_id BIGINT NOT NULL,
    role VARCHAR(50) NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Таблица банковских карт
CREATE TABLE IF NOT EXISTS cards (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    encrypted_number VARCHAR(255) NOT NULL UNIQUE,
    owner_id BIGINT NOT NULL,
    expiry_date DATE NOT NULL,
    status VARCHAR(20) NOT NULL,
    balance DECIMAL(19,2) NOT NULL,
    FOREIGN KEY (owner_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Таблица переводов
CREATE TABLE IF NOT EXISTS transfers (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    from_card_id BIGINT NOT NULL,
    to_card_id BIGINT NOT NULL,
    amount DECIMAL(19,2) NOT NULL,
    created_at TIMESTAMP NOT NULL,
    FOREIGN KEY (from_card_id) REFERENCES cards(id) ON DELETE CASCADE,
    FOREIGN KEY (to_card_id) REFERENCES cards(id) ON DELETE CASCADE
);

-- 2. Очистка существующих данных
DELETE FROM transfers;
DELETE FROM cards;
DELETE FROM user_roles;
DELETE FROM users;

-- 3. Создание тестовых пользователей

-- Администратор (ADMIN)
INSERT INTO users (id, username, password) VALUES 
(1, 'admin', '$2a$10$N.zmdr9k7uOCQb376NoUnuTJ8iAt6Z5EHsM8lE9lBOsl7iKTVEFDa');

-- Обычный пользователь (USER)
INSERT INTO users (id, username, password) VALUES 
(2, 'user', '$2a$10$8.UnVuG9HHgffUDAlk8qfOuVGkqRzgVymGe07xd00DMxs.AQubh4a');

-- 4. Назначение ролей
INSERT INTO user_roles (user_id, role) VALUES 
(1, 'ADMIN'),
(2, 'USER');

-- 5. Создание тестовых карт
INSERT INTO cards (id, encrypted_number, owner_id, expiry_date, status, balance) VALUES 
(1, 'encrypted_1234567890123456', 1, '2025-12-31', 'ACTIVE', 1000.00),
(2, 'encrypted_9876543210987654', 2, '2025-06-30', 'ACTIVE', 500.00);

-- 6. Проверка созданных данных
SELECT '=== ПОЛЬЗОВАТЕЛИ ===' as info;
SELECT id, username, password FROM users;

SELECT '=== РОЛИ ===' as info;
SELECT u.username, ur.role 
FROM users u 
JOIN user_roles ur ON u.id = ur.user_id;

SELECT '=== КАРТЫ ===' as info;
SELECT c.id, c.encrypted_number, u.username as owner, c.expiry_date, c.status, c.balance
FROM cards c
JOIN users u ON c.owner_id = u.id;

-- =====================================================
-- ИНСТРУКЦИЯ ПО ИСПОЛЬЗОВАНИЮ:
-- =====================================================
-- 
-- 1. Выполните скрипт в postgres
-- 2. Перезапустите приложение
-- 3. Войдите в Swagger UI: http://localhost:8080/swagger-ui.html
-- 
-- ТЕСТОВЫЕ ПОЛЬЗОВАТЕЛИ:
-- - admin / admin123 (роль: ADMIN)
-- - user / user123 (роль: USER)
-- 
-- ===================================================== 